services:
  app-api:
    build:
      context: .
      dockerfile: docker/frankenphp/Dockerfile.frankenphp
    ports:
      - "8088:80"
    volumes:
      - .:/app
    environment:
      - PHP_IDE_CONFIG=serverName=app-api
      - APP_ENV=${APP_ENV:-development}
      - WEAVIATE_URL=${WEAVIATE_URL:-http://weaviate:8080}
      - CADDY_GLOBAL_OPTIONS=${CADDY_GLOBAL_OPTIONS:-}
      - FRANKENPHP_CONFIG=${FRANKENPHP_CONFIG:-}
      - SERVER_NAME=${SERVER_NAME:-:80}
      # Database configuration
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-xaddax_api}
      - DB_USER=${DB_USER:-xaddax}
      - DB_PASSWORD=${DB_PASSWORD:-password1}
      - DB_SCHEMA=${DB_SCHEMA:-public}
      # Xdebug configuration
      - XDEBUG_MODE=${XDEBUG_MODE:-debug,develop}
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST:-host.docker.internal}
      - XDEBUG_CLIENT_PORT=${XDEBUG_CLIENT_PORT:-9003}
      - XDEBUG_START_WITH_REQUEST=${XDEBUG_START_WITH_REQUEST:-yes}
      - XDEBUG_IDEKEY=${XDEBUG_IDEKEY:-VSCODE}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - xaddax-api-network
    restart: unless-stopped
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-xaddax_api}
      - POSTGRES_USER=${POSTGRES_USER:-xaddax}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password1}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - xaddax-api-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-xaddax}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  xaddax-api-network:
    external: true